<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjg.blog.dao.SysViewMapper">
  <resultMap id="BaseResultMap" type="com.zjg.blog.entity.SysView">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="isp" jdbcType="VARCHAR" property="isp" />
    <result column="operate_by" jdbcType="VARCHAR" property="operateBy" />
    <result column="create_by" jdbcType="TIMESTAMP" property="createBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ip, address, isp, operate_by, create_by
  </sql>
  <select id="selectByExample" parameterType="com.zjg.blog.entity.SysViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_view
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_view
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zjg.blog.entity.SysViewExample">
    delete from sys_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zjg.blog.entity.SysView" useGeneratedKeys="true">
    insert into sys_view (ip, address, isp, 
      operate_by, create_by)
    values (#{ip,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{isp,jdbcType=VARCHAR}, 
      #{operateBy,jdbcType=VARCHAR}, #{createBy,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zjg.blog.entity.SysView" useGeneratedKeys="true">
    insert into sys_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ip != null">
        ip,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="isp != null">
        isp,
      </if>
      <if test="operateBy != null">
        operate_by,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="isp != null">
        #{isp,jdbcType=VARCHAR},
      </if>
      <if test="operateBy != null">
        #{operateBy,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zjg.blog.entity.SysViewExample" resultType="java.lang.Long">
    select count(*) from sys_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_view
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.isp != null">
        isp = #{record.isp,jdbcType=VARCHAR},
      </if>
      <if test="record.operateBy != null">
        operate_by = #{record.operateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_view
    set id = #{record.id,jdbcType=BIGINT},
      ip = #{record.ip,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      isp = #{record.isp,jdbcType=VARCHAR},
      operate_by = #{record.operateBy,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjg.blog.entity.SysView">
    update sys_view
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="isp != null">
        isp = #{isp,jdbcType=VARCHAR},
      </if>
      <if test="operateBy != null">
        operate_by = #{operateBy,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjg.blog.entity.SysView">
    update sys_view
    set ip = #{ip,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      isp = #{isp,jdbcType=VARCHAR},
      operate_by = #{operateBy,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryCountByDays" parameterType="int" resultType="com.zjg.blog.entity.TimesStatistic">
      SELECT count(*)as count,date(create_by) as date FROM blog.sys_view group by date(create_by) order by create_by desc limit #{arg0};
  </select>
</mapper>