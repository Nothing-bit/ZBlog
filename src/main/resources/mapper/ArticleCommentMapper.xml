<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjg.blog.dao.ArticleCommentMapper">
  <resultMap id="BaseResultMap" type="com.zjg.blog.entity.ArticleComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="target_user_id" jdbcType="BIGINT" property="targetUserId" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="is_effective" jdbcType="BIT" property="effective" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="is_inform" jdbcType="BIT" property="inform" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_by" jdbcType="TIMESTAMP" property="createBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, target_user_id, article_id, parent_id, is_effective, content, is_inform, 
    email, create_by
  </sql>
  <select id="selectByExample" parameterType="com.zjg.blog.entity.ArticleCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_article_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbl_article_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zjg.blog.entity.ArticleCommentExample">
    delete from tbl_article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zjg.blog.entity.ArticleComment" useGeneratedKeys="true">
    insert into tbl_article_comment (user_id, target_user_id, article_id, 
      parent_id, is_effective, content, 
      is_inform, email, create_by
      )
    values (#{userId,jdbcType=BIGINT}, #{targetUserId,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, 
      #{parentId,jdbcType=BIGINT}, #{effective,jdbcType=BIT}, #{content,jdbcType=VARCHAR}, 
      #{inform,jdbcType=BIT}, #{email,jdbcType=VARCHAR}, #{createBy,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zjg.blog.entity.ArticleComment" useGeneratedKeys="true">
    insert into tbl_article_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="targetUserId != null">
        target_user_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="effective != null">
        is_effective,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="inform != null">
        is_inform,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="targetUserId != null">
        #{targetUserId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="effective != null">
        #{effective,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="inform != null">
        #{inform,jdbcType=BIT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zjg.blog.entity.ArticleCommentExample" resultType="java.lang.Long">
    select count(*) from tbl_article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_article_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.targetUserId != null">
        target_user_id = #{record.targetUserId,jdbcType=BIGINT},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.effective != null">
        is_effective = #{record.effective,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.inform != null">
        is_inform = #{record.inform,jdbcType=BIT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_article_comment
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      target_user_id = #{record.targetUserId,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      is_effective = #{record.effective,jdbcType=BIT},
      content = #{record.content,jdbcType=VARCHAR},
      is_inform = #{record.inform,jdbcType=BIT},
      email = #{record.email,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjg.blog.entity.ArticleComment">
    update tbl_article_comment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="targetUserId != null">
        target_user_id = #{targetUserId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="effective != null">
        is_effective = #{effective,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="inform != null">
        is_inform = #{inform,jdbcType=BIT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjg.blog.entity.ArticleComment">
    update tbl_article_comment
    set user_id = #{userId,jdbcType=BIGINT},
      target_user_id = #{targetUserId,jdbcType=BIGINT},
      article_id = #{articleId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      is_effective = #{effective,jdbcType=BIT},
      content = #{content,jdbcType=VARCHAR},
      is_inform = #{inform,jdbcType=BIT},
      email = #{email,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>